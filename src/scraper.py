import requests
from bs4 import BeautifulSoup
import csv
from datetime import datetime
import os

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á URL ‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å DuckDuckGo (‡∏õ‡∏•‡∏î‡∏£‡∏´‡∏±‡∏™)
def decode_duckduckgo_url(url):
    from urllib.parse import urlparse, parse_qs, unquote
    if "uddg=" in url:
        # ‡∏ï‡∏±‡∏î prefix ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏à‡∏£‡∏¥‡∏á‡∏≠‡∏≠‡∏Å
        parts = url.split("uddg=")
        decoded_url = unquote(parts[1].split("&")[0])
        return decoded_url
    return url

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
def fetch_duckduckgo_news(query, max_results=50):
    url = f'https://duckduckgo.com/html/?q={query}'
    response = requests.get(url)

    if response.status_code == 200:
        print("‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

        soup = BeautifulSoup(response.text, 'html.parser')
        results = soup.find_all('a', {'class': 'result__a'})

        data = []
        timestamp = datetime.now().isoformat()

        for idx, result in enumerate(results):
            title = result.get_text()
            raw_url = result['href']
            clean_url = decode_duckduckgo_url(raw_url)
            print(f"{idx+1}. {title}")
            print(f"   URL: {clean_url}")
            data.append([title, clean_url, timestamp])


    #     # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏•‡∏á CSV
    #     with open("data/scraped_results.csv", mode="a", newline="", encoding="utf-8") as file:
    #         writer = csv.writer(file)
            
    #         # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ header
    #         if os.stat("data/scraped_results.csv").st_size == 0:
    #             writer.writerow(["title", "url", "timestamp"])

    #         writer.writerows(data)

    #     print(f"üìÅ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å {len(data)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡∏á data/scraped_results.csv ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    # else:
    #     print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {response.status_code}")

# ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
fetch_duckduckgo_news("sustainable construction materials")
